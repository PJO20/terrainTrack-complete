<?php
/**
 * Test d√©taill√© de l'envoi d'email avec logs complets
 */

echo "üîç Test d√©taill√© de l'envoi d'email\n";
echo "===================================\n\n";

// Inclure les d√©pendances n√©cessaires
require_once __DIR__ . '/vendor/autoload.php';

try {
    // Cr√©er les services n√©cessaires
    $host = 'localhost';
    $port = '8889';
    $dbname = 'exemple';
    $username = 'root';
    $password = 'root';
    
    $dsn = "mysql:host=$host;port=$port;dbname=$dbname;charset=utf8mb4";
    $pdo = new PDO($dsn, $username, $password, [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC
    ]);
    
    // Cr√©er les repositories
    $userRepository = new \App\Repository\UserRepository($pdo);
    $notificationLogsRepository = new \App\Repository\NotificationLogsRepository($pdo);
    $preferencesRepository = new \App\Repository\NotificationPreferencesRepository($pdo);
    
    echo "‚úÖ Services cr√©√©s avec succ√®s\n";
    
    // R√©cup√©rer l'utilisateur et les pr√©f√©rences
    $userId = 7; // ID de momo@gmail.com
    $user = $userRepository->findById($userId);
    $preferences = $preferencesRepository->findByUserId($userId);
    
    if (!$user) {
        echo "‚ùå Utilisateur non trouv√©\n";
        exit;
    }
    echo "‚úÖ Utilisateur trouv√©: " . $user->getName() . " (" . $user->getEmail() . ")\n";
    
    if (!$preferences) {
        echo "‚ùå Pr√©f√©rences non trouv√©es\n";
        exit;
    }
    echo "‚úÖ Pr√©f√©rences trouv√©es\n";
    
    // Test direct avec PHPMailer
    echo "\nüìß Test direct avec PHPMailer...\n";
    
    $mail = new \PHPMailer\PHPMailer\PHPMailer(true);
    
    try {
        // Configuration SMTP
        $mail->isSMTP();
        $mail->Host = 'smtp.gmail.com';
        $mail->SMTPAuth = true;
        $mail->Username = 'pjorsini20@gmail.com';
        $mail->Password = 'gmqncgtfunpfnkjh';
        $mail->SMTPSecure = \PHPMailer\PHPMailer\PHPMailer::ENCRYPTION_STARTTLS;
        $mail->Port = 587;
        
        // Configuration de l'email
        $mail->setFrom('pjorsini20@gmail.com', 'TerrainTrack');
        $mail->addAddress('pjorsini20@gmail.com', 'Pierre Jorsini');
        $mail->isHTML(true);
        $mail->Subject = 'Test Email TerrainTrack - ' . date('Y-m-d H:i:s');
        $mail->Body = '
        <h2>üß™ Test Email TerrainTrack</h2>
        <p><strong>Date:</strong> ' . date('Y-m-d H:i:s') . '</p>
        <p><strong>Utilisateur:</strong> ' . $user->getName() . ' (' . $user->getEmail() . ')</p>
        <p><strong>Pr√©f√©rences activ√©es:</strong></p>
        <ul>
            <li>Rappels d\'entretien: ' . ($preferences['maintenance_reminders'] ? 'Oui' : 'Non') . '</li>
            <li>Alertes critiques: ' . ($preferences['critical_alerts'] ? 'Oui' : 'Non') . '</li>
            <li>Notifications d\'assignation: ' . ($preferences['assignment_notifications'] ? 'Oui' : 'Non') . '</li>
        </ul>
        <p>Si vous recevez cet email, le syst√®me de notifications fonctionne correctement !</p>
        <hr>
        <p><em>Email envoy√© par le syst√®me TerrainTrack</em></p>
        ';
        
        echo "üì§ Tentative d'envoi...\n";
        $result = $mail->send();
        
        if ($result) {
            echo "‚úÖ Email envoy√© avec succ√®s !\n";
            echo "üìß V√©rifiez votre bo√Æte email (et le dossier SPAM)\n";
            echo "üìß Adresse de destination: pjorsini20@gmail.com\n";
            echo "üìß Sujet: Test Email TerrainTrack - " . date('Y-m-d H:i:s') . "\n";
        } else {
            echo "‚ùå √âchec de l'envoi\n";
        }
        
    } catch (\PHPMailer\PHPMailer\Exception $e) {
        echo "‚ùå Erreur PHPMailer: " . $e->getMessage() . "\n";
        echo "üìç Code d'erreur: " . $e->getCode() . "\n";
    }
    
} catch (Exception $e) {
    echo "‚ùå Erreur g√©n√©rale: " . $e->getMessage() . "\n";
    echo "üìç Fichier: " . $e->getFile() . ":" . $e->getLine() . "\n";
}

echo "\nüîç Test termin√© !\n";
?>
