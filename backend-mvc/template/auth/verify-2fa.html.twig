{% extends "base.html.twig" %}

{% block title %}{{ page_title }}{% endblock %}

{% block extra_css %}
<style>
.verify-2fa-container {
    max-width: 400px;
    margin: 4rem auto;
    padding: 2rem;
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
}

.verify-2fa-header h1 {
    color: #1e293b;
    margin-bottom: 0.5rem;
}

.verify-2fa-header p {
    color: #64748b;
    margin-bottom: 2rem;
}

.form-group {
    margin-bottom: 1.5rem;
    text-align: left;
}

.form-label {
    display: block;
    font-weight: 600;
    color: #374151;
    margin-bottom: 0.5rem;
}

.form-input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 1.2rem;
    text-align: center;
    letter-spacing: 0.2em;
}

.form-input:focus {
    outline: none;
    border-color: #2563eb;
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
}

.btn {
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s;
    border: none;
    cursor: pointer;
    margin: 0.5rem;
}

.btn-primary {
    background: #2563eb;
    color: white;
}

.btn-primary:hover {
    background: #1d4ed8;
}

.btn-secondary {
    background: #6b7280;
    color: white;
}

.btn-secondary:hover {
    background: #4b5563;
}

.alert {
    padding: 1rem;
    border-radius: 6px;
    margin-bottom: 1rem;
}

.alert-error {
    background: #fef2f2;
    border: 1px solid #ef4444;
    color: #dc2626;
}

.resend-section {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid #e2e8f0;
}

.resend-section p {
    color: #64748b;
    font-size: 0.9rem;
    margin-bottom: 1rem;
}
</style>
{% endblock %}

{% block content %}
<div class="verify-2fa-container">
    <div class="verify-2fa-header">
        <h1>üîê V√©rification 2FA</h1>
        <p>Un code de v√©rification a √©t√© envoy√© √† <strong>{{ user.email }}</strong></p>
    </div>

    {% if app.request.query.get('error') %}
    <div class="alert alert-error">
        {{ app.request.query.get('error') }}
    </div>
    {% endif %}

    <form method="POST" action="/auth/verify-2fa/process">
        <div class="form-group">
            <label class="form-label" for="code">Code de v√©rification</label>
            <input type="text" id="code" name="code" class="form-input" 
                   placeholder="123456" maxlength="6" pattern="[0-9]{6}" required autofocus>
        </div>
        
        <button type="submit" class="btn btn-primary">
            <i class='bx bx-check'></i>
            V√©rifier
        </button>
    </form>

    <div class="resend-section">
        <p>Vous n'avez pas re√ßu le code ?</p>
        <button type="button" class="btn btn-secondary" id="resend-code-btn">
            <i class='bx bx-refresh'></i>
            Renvoyer le code
        </button>
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const resendBtn = document.getElementById('resend-code-btn');
    const codeInput = document.getElementById('code');

    // Auto-focus sur le champ de code
    codeInput.focus();

    // Renvoyer le code
    if (resendBtn) {
        resendBtn.addEventListener('click', function() {
            console.log('üîÑ Renvoi du code 2FA...');
            
            fetch('/auth/verify-2fa/resend', {
                method: 'POST'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('Nouveau code envoy√© !', 'success');
                } else {
                    showNotification('Erreur: ' + data.error, 'error');
                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                showNotification('Erreur de connexion', 'error');
            });
        });
    }

    // Fonction pour afficher les notifications
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 500;
            z-index: 10000;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        `;
        
        if (type === 'success') {
            notification.style.background = '#10b981';
        } else if (type === 'error') {
            notification.style.background = '#ef4444';
        } else {
            notification.style.background = '#3b82f6';
        }
        
        notification.textContent = message;
        document.body.appendChild(notification);
        
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 5000);
    }
});
</script>
{% endblock %}
