{% extends 'base.html.twig' %}

{% block title %}{{ user.name }} - Profil{% endblock %}

{% block extra_head %}
  <style>
    body {
      background: #f3f7fd !important;
    }
    
    .profile-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }
    
    .profile-header {
      display: flex;
      align-items: center;
      gap: 2rem;
      background: #fff;
      border-radius: 16px;
      padding: 2.5rem;
      box-shadow: 0 2px 12px rgba(30,40,90,0.08);
      margin-bottom: 2rem;
      position: relative;
    }
    
    .profile-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 6px;
      background: linear-gradient(90deg, #2563eb, #3b82f6, #06b6d4);
      border-radius: 16px 16px 0 0;
    }
    
    .profile-avatar-container {
      position: relative;
    }
    
    .profile-avatar {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      object-fit: cover;
      border: 4px solid #fff;
      box-shadow: 0 4px 16px rgba(0,0,0,0.15);
      background: linear-gradient(135deg, #2563eb, #3b82f6);
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 2.5rem;
      font-weight: 700;
    }
    
    .status-indicator {
      position: absolute;
      bottom: 8px;
      right: 8px;
      width: 24px;
      height: 24px;
      border-radius: 50%;
      background: #22c55e;
      border: 4px solid #fff;
      box-shadow: 0 2px 8px rgba(0,0,0,0.2);
    }
    
    .profile-info {
      flex: 1;
    }
    
    .profile-name {
      font-size: 2.2rem;
      font-weight: 800;
      color: #1a2340;
      margin: 0 0 0.5rem 0;
      display: flex;
      align-items: center;
      gap: 1rem;
    }
    
    .profile-role {
      font-size: 1.3rem;
      color: #2563eb;
      font-weight: 600;
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .profile-meta {
      display: flex;
      flex-wrap: wrap;
      gap: 2rem;
      color: #6b7280;
      font-size: 1rem;
    }
    
    .profile-meta-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .profile-meta-item i {
      color: #2563eb;
      width: 20px;
      text-align: center;
    }
    
    .profile-actions {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }
    
    .btn-edit {
      background: #2563eb;
      color: white;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.2s;
      font-size: 1rem;
    }
    
    .btn-edit:hover {
      background: #1d4ed8;
      transform: translateY(-1px);
    }
    
    .btn-secondary {
      background: #f3f4f6;
      color: #374151;
      border: 1px solid #d1d5db;
      padding: 0.75rem 1.5rem;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.2s;
      font-size: 1rem;
      text-decoration: none;
    }
    
    .btn-secondary:hover {
      background: #e5e7eb;
      transform: translateY(-1px);
    }
    
    .profile-content {
      display: grid;
      grid-template-columns: 1fr 400px;
      gap: 2rem;
      margin-bottom: 2rem;
    }
    
    .profile-main {
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }
    
    .profile-sidebar {
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }
    
    .card {
      background: #fff;
      border-radius: 12px;
      padding: 2rem;
      box-shadow: 0 2px 8px rgba(30,40,90,0.06);
      border: 1px solid #f1f3f4;
    }
    
    .card-title {
      font-size: 1.4rem;
      font-weight: 700;
      color: #1a2340;
      margin: 0 0 1.5rem 0;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
    
    .card-title i {
      color: #2563eb;
      font-size: 1.2rem;
    }
    
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1.5rem;
      margin-bottom: 2rem;
    }
    
    .stat-item {
      text-align: center;
      padding: 1.5rem;
      background: linear-gradient(135deg, #f8fafc, #f1f5f9);
      border-radius: 12px;
      border: 1px solid #e2e8f0;
      position: relative;
      overflow: hidden;
    }
    
    .stat-item::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: var(--accent-color);
    }
    
    .stat-item.success { --accent-color: #22c55e; }
    .stat-item.info { --accent-color: #3b82f6; }
    .stat-item.warning { --accent-color: #f59e0b; }
    .stat-item.primary { --accent-color: #8b5cf6; }
    
    .stat-value {
      font-size: 2.2rem;
      font-weight: 800;
      color: #1a2340;
      margin-bottom: 0.5rem;
      display: block;
    }
    
    .stat-label {
      font-size: 0.95rem;
      color: #6b7280;
      font-weight: 500;
    }
    
    .bio-section {
      margin-bottom: 2rem;
    }
    
    .bio-text {
      color: #4b5563;
      line-height: 1.7;
      font-size: 1.1rem;
      margin-bottom: 1.5rem;
    }
    
    .activity-list {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    
    .activity-item {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      background: #f9fafb;
      border-radius: 8px;
      border-left: 4px solid var(--activity-color);
      position: relative;
    }
    
    .activity-item.success { --activity-color: #22c55e; }
    .activity-item.info { --activity-color: #3b82f6; }
    .activity-item.warning { --activity-color: #f59e0b; }
    .activity-item.primary { --activity-color: #8b5cf6; }
    
    .activity-icon {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: var(--activity-color);
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1rem;
      flex-shrink: 0;
    }
    
    .activity-content {
      flex: 1;
      min-width: 0;
    }
    
    .activity-title {
      font-weight: 600;
      color: #1a2340;
      margin-bottom: 0.25rem;
      font-size: 1rem;
    }
    
    .activity-description {
      color: #6b7280;
      font-size: 0.9rem;
      margin-bottom: 0.25rem;
    }
    
    .activity-date {
      color: #9ca3af;
      font-size: 0.85rem;
    }
    
    .skills-list {
      display: flex;
      flex-direction: column;
      gap: 1.25rem;
    }
    
    .skill-item {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }
    
    .skill-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .skill-name {
      font-weight: 600;
      color: #1a2340;
      font-size: 1rem;
    }
    
    .skill-percentage {
      font-size: 0.9rem;
      color: #6b7280;
      font-weight: 500;
    }
    
    .skill-bar {
      height: 8px;
      background: #e5e7eb;
      border-radius: 4px;
      overflow: hidden;
      position: relative;
    }
    
    .skill-progress {
      height: 100%;
      background: var(--skill-color);
      border-radius: 4px;
      transition: width 1s ease-in-out;
      position: relative;
    }
    
    .skill-progress.success { --skill-color: linear-gradient(90deg, #22c55e, #16a34a); }
    .skill-progress.info { --skill-color: linear-gradient(90deg, #3b82f6, #2563eb); }
    .skill-progress.primary { --skill-color: linear-gradient(90deg, #8b5cf6, #7c3aed); }
    .skill-progress.warning { --skill-color: linear-gradient(90deg, #f59e0b, #d97706); }
    
    .skill-progress::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
      animation: shimmer 2s infinite;
    }
    
    @keyframes shimmer {
      0% { transform: translateX(-100%); }
      100% { transform: translateX(100%); }
    }
    
    .contact-info {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    
    .contact-item {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      background: #f9fafb;
      border-radius: 8px;
      transition: all 0.2s;
    }
    
    .contact-item:hover {
      background: #f3f4f6;
    }
    
    .contact-icon {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: #2563eb;
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1rem;
      flex-shrink: 0;
    }
    
    .contact-details {
      flex: 1;
    }
    
    .contact-label {
      font-size: 0.9rem;
      color: #6b7280;
      margin-bottom: 0.25rem;
    }
    
    .contact-value {
      font-weight: 600;
      color: #1a2340;
      font-size: 1rem;
    }
    
    @media (max-width: 968px) {
      .profile-content {
        grid-template-columns: 1fr;
      }
      
      .profile-header {
        flex-direction: column;
        text-align: center;
        gap: 1.5rem;
      }
      
      .stats-grid {
        grid-template-columns: repeat(2, 1fr);
      }
      
      .profile-meta {
        justify-content: center;
      }
    }
    
    @media (max-width: 640px) {
      .profile-container {
        padding: 1rem;
      }
      
      .stats-grid {
        grid-template-columns: 1fr;
      }
    }

    /* Modal d'Ã©dition */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.5);
      backdrop-filter: blur(4px);
    }

    .modal.show {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .modal-content {
      background: white;
      border-radius: 16px;
      padding: 2rem;
      width: 90%;
      max-width: 600px;
      max-height: 80vh;
      overflow-y: auto;
      box-shadow: 0 20px 40px rgba(0,0,0,0.15);
      position: relative;
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }

    .modal-title {
      font-size: 1.5rem;
      font-weight: 700;
      color: #1a2340;
      margin: 0;
    }

    .close-btn {
      background: none;
      border: none;
      font-size: 1.5rem;
      color: #6b7280;
      cursor: pointer;
      padding: 0.5rem;
      border-radius: 50%;
      transition: all 0.2s;
    }

    .close-btn:hover {
      background: #f3f4f6;
      color: #1a2340;
    }

    .form-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1.5rem;
      margin-bottom: 2rem;
    }

    .form-group {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }

    .form-group.full-width {
      grid-column: 1 / -1;
    }

    .form-label {
      font-weight: 600;
      color: #374151;
      font-size: 0.95rem;
    }

    .form-input, .form-textarea, .form-select {
      padding: 0.75rem 1rem;
      border: 2px solid #e5e7eb;
      border-radius: 8px;
      font-size: 1rem;
      transition: all 0.2s;
      background: white;
    }

    .form-input:focus, .form-textarea:focus, .form-select:focus {
      outline: none;
      border-color: #2563eb;
      box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    .form-textarea {
      resize: vertical;
      min-height: 100px;
    }

    .modal-footer {
      display: flex;
      gap: 1rem;
      justify-content: flex-end;
    }

    .btn-cancel {
      background: #f3f4f6;
      color: #374151;
      border: 2px solid #d1d5db;
      padding: 0.75rem 2rem;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s;
    }

    .btn-cancel:hover {
      background: #e5e7eb;
    }

    .btn-save {
      background: #2563eb;
      color: white;
      border: 2px solid #2563eb;
      padding: 0.75rem 2rem;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.2s;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .btn-save:hover {
      background: #1d4ed8;
      border-color: #1d4ed8;
    }

    .btn-save:disabled {
      background: #9ca3af;
      border-color: #9ca3af;
      cursor: not-allowed;
    }

    @media (max-width: 640px) {
      .form-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
{% endblock %}

{% block content %}
<div class="profile-container">
  <!-- Header du profil -->
  <div class="profile-header">
    <div class="profile-avatar-container">
      {% if user.avatar_url %}
        <img src="{{ user.avatar_url }}" alt="{{ user.name }}" class="profile-avatar">
      {% else %}
        <div class="profile-avatar">{{ user.initials }}</div>
      {% endif %}
      <div class="status-indicator" title="En ligne"></div>
    </div>
    
    <div class="profile-info">
      <h1 class="profile-name">
        {{ user.name }}
        <span style="background: #22c55e; color: white; padding: 0.25rem 0.75rem; border-radius: 20px; font-size: 0.7rem; font-weight: 600;">ACTIF</span>
      </h1>
      <div class="profile-role">
        <i class="fas fa-user-tie"></i>
        {{ user.role }}
      </div>
      <div class="profile-meta">
        <div class="profile-meta-item">
          <i class="fas fa-envelope"></i>
          <span>{{ user.email }}</span>
        </div>
        <div class="profile-meta-item">
          <i class="fas fa-phone"></i>
          <span>{{ user.phone }}</span>
        </div>
        <div class="profile-meta-item">
          <i class="fas fa-map-marker-alt"></i>
          <span>{{ user.location }}</span>
        </div>
        <div class="profile-meta-item">
          <i class="fas fa-calendar-alt"></i>
          <span>Rejoint le {{ user.joined_date|date('d M Y') }}</span>
        </div>
      </div>
    </div>
    
    <div class="profile-actions">
      <button class="btn-edit" onclick="openEditModal()">
        <i class="fas fa-edit"></i>
        Modifier le profil
      </button>
      <a href="/settings" class="btn-secondary">
        <i class="fas fa-cog"></i>
        ParamÃ¨tres
      </a>
    </div>
  </div>

  <!-- Statistiques -->
  <div class="card">
    <h2 class="card-title">
      <i class="fas fa-chart-line"></i>
      Statistiques de performance
    </h2>
    <div class="stats-grid">
      <div class="stat-item success">
        <span class="stat-value">{{ stats.interventions_completed }}</span>
        <span class="stat-label">Interventions rÃ©alisÃ©es</span>
      </div>
      <div class="stat-item info">
        <span class="stat-value">{{ stats.vehicles_managed }}</span>
        <span class="stat-label">VÃ©hicules gÃ©rÃ©s</span>
      </div>
      <div class="stat-item warning">
        <span class="stat-value">{{ stats.teams_led }}</span>
        <span class="stat-label">Ãquipes dirigÃ©es</span>
      </div>
      <div class="stat-item primary">
        <span class="stat-value">{{ stats.reports_generated }}</span>
        <span class="stat-label">Rapports gÃ©nÃ©rÃ©s</span>
      </div>
      <div class="stat-item info">
        <span class="stat-value">{{ stats.hours_logged }}h</span>
        <span class="stat-label">Heures travaillÃ©es</span>
      </div>
      <div class="stat-item success">
        <span class="stat-value">{{ stats.success_rate }}%</span>
        <span class="stat-label">Taux de rÃ©ussite</span>
      </div>
    </div>
  </div>

  <!-- Contenu principal -->
  <div class="profile-content">
    <div class="profile-main">
      <!-- Bio -->
      <div class="card">
        <h2 class="card-title">
          <i class="fas fa-user"></i>
          Ã propos
        </h2>
        <div class="bio-section">
          <p class="bio-text">{{ user.bio }}</p>
        </div>
      </div>

      <!-- ActivitÃ© rÃ©cente -->
      <div class="card">
        <h2 class="card-title">
          <i class="fas fa-history"></i>
          ActivitÃ© rÃ©cente
        </h2>
        <div class="activity-list">
          {% for activity in recent_activity %}
          <div class="activity-item {{ activity.color }}">
            <div class="activity-icon">
              <i class="{{ activity.icon }}"></i>
            </div>
            <div class="activity-content">
              <div class="activity-title">{{ activity.title }}</div>
              <div class="activity-description">{{ activity.description }}</div>
              <div class="activity-date">{{ activity.date|date('d M Y Ã  H:i') }}</div>
            </div>
          </div>
          {% endfor %}
        </div>
      </div>
    </div>

    <div class="profile-sidebar">
      <!-- CompÃ©tences -->
      <div class="card">
        <h2 class="card-title">
          <i class="fas fa-star"></i>
          CompÃ©tences
        </h2>
        <div class="skills-list">
          {% for skill in skills %}
          <div class="skill-item">
            <div class="skill-header">
              <span class="skill-name">{{ skill.name }}</span>
              <span class="skill-percentage">{{ skill.level }}%</span>
            </div>
            <div class="skill-bar">
              <div class="skill-progress {{ skill.color }}" style="width: {{ skill.level }}%"></div>
            </div>
          </div>
          {% endfor %}
        </div>
      </div>

      <!-- Informations de contact -->
      <div class="card">
        <h2 class="card-title">
          <i class="fas fa-address-card"></i>
          Informations de contact
        </h2>
        <div class="contact-info">
          <div class="contact-item">
            <div class="contact-icon">
              <i class="fas fa-envelope"></i>
            </div>
            <div class="contact-details">
              <div class="contact-label">Email professionnel</div>
              <div class="contact-value">{{ user.email }}</div>
            </div>
          </div>
          <div class="contact-item">
            <div class="contact-icon">
              <i class="fas fa-phone"></i>
            </div>
            <div class="contact-details">
              <div class="contact-label">TÃ©lÃ©phone</div>
              <div class="contact-value">{{ user.phone }}</div>
            </div>
          </div>
          <div class="contact-item">
            <div class="contact-icon">
              <i class="fas fa-building"></i>
            </div>
            <div class="contact-details">
              <div class="contact-label">DÃ©partement</div>
              <div class="contact-value">{{ user.department }}</div>
            </div>
          </div>
          <div class="contact-item">
            <div class="contact-icon">
              <i class="fas fa-globe"></i>
            </div>
            <div class="contact-details">
              <div class="contact-label">Fuseau horaire</div>
              <div class="contact-value">{{ user.timezone }}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal d'Ã©dition du profil -->
<div id="editModal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <h3 class="modal-title">Modifier le profil</h3>
      <button class="close-btn" onclick="closeEditModal()">&times;</button>
    </div>
    
    <form id="editProfileForm">
      <div class="form-grid">
        <div class="form-group">
          <label class="form-label" for="edit-name">Nom complet</label>
          <input type="text" id="edit-name" name="name" class="form-input" value="{{ user.name }}" required>
        </div>
        
        <div class="form-group">
          <label class="form-label" for="edit-email">Email</label>
          <input type="email" id="edit-email" name="email" class="form-input" value="{{ user.email }}" required>
        </div>
        
        <div class="form-group">
          <label class="form-label" for="edit-phone">TÃ©lÃ©phone</label>
          <input type="tel" id="edit-phone" name="phone" class="form-input" value="{{ user.phone }}">
        </div>
        
        <div class="form-group">
          <label class="form-label" for="edit-location">Localisation</label>
          <input type="text" id="edit-location" name="location" class="form-input" value="{{ user.location }}">
        </div>
        
        <div class="form-group">
          <label class="form-label" for="edit-timezone">Fuseau horaire</label>
          <select id="edit-timezone" name="timezone" class="form-select">
            <option value="Europe/Paris" {{ user.timezone == 'Europe/Paris' ? 'selected' : '' }}>Europe/Paris (GMT+1)</option>
            <option value="Europe/London" {{ user.timezone == 'Europe/London' ? 'selected' : '' }}>Europe/London (GMT+0)</option>
            <option value="America/New_York" {{ user.timezone == 'America/New_York' ? 'selected' : '' }}>America/New_York (GMT-5)</option>
          </select>
        </div>
        
        <div class="form-group">
          <label class="form-label" for="edit-language">Langue</label>
          <select id="edit-language" name="language" class="form-select">
            <option value="FranÃ§ais" {{ user.language == 'FranÃ§ais' ? 'selected' : '' }}>FranÃ§ais</option>
            <option value="English" {{ user.language == 'English' ? 'selected' : '' }}>English</option>
            <option value="EspaÃ±ol" {{ user.language == 'EspaÃ±ol' ? 'selected' : '' }}>EspaÃ±ol</option>
          </select>
        </div>
        
        <div class="form-group full-width">
          <label class="form-label" for="edit-bio">Biographie</label>
          <textarea id="edit-bio" name="bio" class="form-textarea" placeholder="Parlez-nous de vous...">{{ user.bio }}</textarea>
        </div>
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn-cancel" onclick="closeEditModal()">Annuler</button>
        <button type="submit" class="btn-save" id="saveBtn">
          <i class="fas fa-save"></i>
          Sauvegarder
        </button>
      </div>
    </form>
  </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
// Fonctions pour la modal d'Ã©dition
function openEditModal() {
    document.getElementById('editModal').classList.add('show');
    document.body.style.overflow = 'hidden';
}

function closeEditModal() {
    document.getElementById('editModal').classList.remove('show');
    document.body.style.overflow = 'auto';
}

// Fermer la modal en cliquant Ã  l'extÃ©rieur
document.getElementById('editModal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeEditModal();
    }
});

// Gestion du formulaire d'Ã©dition
document.getElementById('editProfileForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const saveBtn = document.getElementById('saveBtn');
    const originalText = saveBtn.innerHTML;
    
    // Animation du bouton
    saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sauvegarde...';
    saveBtn.disabled = true;
    
    // RÃ©cupÃ©rer les donnÃ©es du formulaire
    const formData = new FormData(this);
    
    // Simulation d'une requÃªte AJAX
    fetch('/profile/update', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // SuccÃ¨s
            saveBtn.innerHTML = '<i class="fas fa-check"></i> SauvegardÃ© !';
            saveBtn.style.background = '#22c55e';
            
            // Mettre Ã  jour les informations affichÃ©es
            updateProfileDisplay(data.user);
            
            // Fermer la modal aprÃ¨s 1 seconde
            setTimeout(() => {
                closeEditModal();
                saveBtn.innerHTML = originalText;
                saveBtn.style.background = '#2563eb';
                saveBtn.disabled = false;
            }, 1000);
            
            // Notification de succÃ¨s
            showNotification('Profil mis Ã  jour avec succÃ¨s !', 'success');
        } else {
            throw new Error(data.message || 'Erreur lors de la sauvegarde');
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
        
        // Erreur
        saveBtn.innerHTML = '<i class="fas fa-times"></i> Erreur';
        saveBtn.style.background = '#ef4444';
        
        // Notification d'erreur
        showNotification(error.message, 'error');
        
        // Restaurer le bouton aprÃ¨s 3 secondes
        setTimeout(() => {
            saveBtn.innerHTML = originalText;
            saveBtn.style.background = '#2563eb';
            saveBtn.disabled = false;
        }, 3000);
    });
});

// Mettre Ã  jour l'affichage du profil aprÃ¨s sauvegarde
function updateProfileDisplay(userData) {
    // Mettre Ã  jour le nom
    const nameElement = document.querySelector('.profile-name');
    if (nameElement && userData.name) {
        nameElement.firstChild.textContent = userData.name + ' ';
    }
    
    // Mettre Ã  jour l'email
    const emailElements = document.querySelectorAll('.profile-meta-item span');
    emailElements.forEach(el => {
        if (el.textContent.includes('@') && userData.email) {
            el.textContent = userData.email;
        }
    });
    
    // Mettre Ã  jour le tÃ©lÃ©phone
    const phoneElements = document.querySelectorAll('.contact-value');
    phoneElements.forEach(el => {
        if (el.textContent.includes('+') && userData.phone) {
            el.textContent = userData.phone;
        }
    });
}

// SystÃ¨me de notifications
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 10000;
        padding: 1rem 1.5rem;
        border-radius: 8px;
        color: white;
        font-weight: 600;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        transform: translateX(100%);
        transition: transform 0.3s ease;
        max-width: 400px;
    `;
    
    switch(type) {
        case 'success':
            notification.style.background = '#22c55e';
            break;
        case 'error':
            notification.style.background = '#ef4444';
            break;
        case 'warning':
            notification.style.background = '#f59e0b';
            break;
        default:
            notification.style.background = '#3b82f6';
    }
    
    notification.textContent = message;
    document.body.appendChild(notification);
    
    // Animation d'entrÃ©e
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);
    
    // Suppression automatique
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// Animation des barres de compÃ©tences au chargement
document.addEventListener('DOMContentLoaded', function() {
    const skillBars = document.querySelectorAll('.skill-progress');
    
    // Observer d'intersection pour l'animation
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const bar = entry.target;
                const width = bar.style.width;
                bar.style.width = '0%';
                setTimeout(() => {
                    bar.style.width = width;
                }, 100);
            }
        });
    }, { threshold: 0.5 });
    
    skillBars.forEach(bar => observer.observe(bar));
});
</script>
{% endblock %} 