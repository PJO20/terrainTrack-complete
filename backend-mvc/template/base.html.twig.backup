<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}TerrainTrack{% endblock %}</title>
    
    <!-- CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/css/style.css" rel="stylesheet">
    <link href="/assets/css/emergency-fix.css" rel="stylesheet">
    {% block extra_head %}{% endblock %}
    
    <style>
        /* === DROPDOWNS ET ÉLÉMENTS SPÉCIFIQUES === */
        .user-box {
        body.theme-light .settings-container,
        body.theme-light .settings-content,
        body.theme-light .content,
        body.theme-light .container,
        body.theme-light .container-fluid,
        body:not([class*="theme-"]),
        body:not([class*="theme-"]) .main-content,
        body:not([class*="theme-"]) .settings-container,
        body:not([class*="theme-"]) .settings-content,
        body:not([class*="theme-"]) .content,
        body:not([class*="theme-"]) .container,
        body:not([class*="theme-"]) .container-fluid {
            background-color: #ffffff !important;
            color: #212529 !important;
        }
        
        body.theme-light .card,
        body.theme-light .notification-group,
        body.theme-light .theme-options,
        body.theme-light .appearance-section,
        body:not([class*="theme-"]) .card,
        body:not([class*="theme-"]) .notification-group,
        body:not([class*="theme-"]) .theme-options,
        body:not([class*="theme-"]) .appearance-section {
            background-color: #ffffff !important;
            color: #212529 !important;
            border-color: #dee2e6 !important;
        }
        
        body.theme-light .sidebar,
        body.theme-light .settings-sidebar,
        body:not([class*="theme-"]) .sidebar,
        body:not([class*="theme-"]) .settings-sidebar {
            background-color: #f8f9fa !important;
            color: #212529 !important;
            border-right-color: #dee2e6 !important;
        }
        
        body.theme-light .header,
        body:not([class*="theme-"]) .header {
            background-color: #ffffff !important;
            color: #212529 !important;
            border-bottom-color: #dee2e6 !important;
        }
        
        body.theme-light h1,
        body.theme-light h2,
        body.theme-light h3,
        body.theme-light h4,
        body.theme-light h5,
        body.theme-light h6,
        body.theme-light p,
        body.theme-light span,
        body.theme-light div,
        body.theme-light label,
        body.theme-light .form-label,
        body.theme-light .theme-label,
        body:not([class*="theme-"]) h1,
        body:not([class*="theme-"]) h2,
        body:not([class*="theme-"]) h3,
        body:not([class*="theme-"]) h4,
        body:not([class*="theme-"]) h5,
        body:not([class*="theme-"]) h6,
        body:not([class*="theme-"]) p,
        body:not([class*="theme-"]) span,
        body:not([class*="theme-"]) div,
        body:not([class*="theme-"]) label,
        body:not([class*="theme-"]) .form-label,
        body:not([class*="theme-"]) .theme-label {
            color: #212529 !important;
            background-color: transparent !important;
        }
        
        body.theme-light .theme-option,
        body:not([class*="theme-"]) .theme-option {
            background-color: #f8f9fa !important;
            color: #212529 !important;
            border-color: #dee2e6 !important;
        }
        body.theme-light .theme-option.active,
        body:not([class*="theme-"]) .theme-option.active {
            background-color: #0d6efd !important;
            border-color: #0d6efd !important;
            color: #ffffff !important;
        }
        
        /* THÈME SOMBRE */
        body.theme-dark {
            background-color: #1a1a1a !important;
            color: #ffffff !important;
        }
        body.theme-dark .card {
            background-color: #2d2d2d !important;
            color: #ffffff !important;
            border-color: #404040 !important;
        }
        body.theme-dark .sidebar {
            background-color: #2d2d2d !important;
            color: #ffffff !important;
            border-right-color: #404040 !important;
        }
        body.theme-dark .header {
            background-color: #2d2d2d !important;
            color: #ffffff !important;
            border-bottom-color: #404040 !important;
        }
        body.theme-dark .form-control,
        body.theme-dark .form-select {
            background-color: #404040 !important;
            color: #ffffff !important;
            border-color: #555555 !important;
        }
        body.theme-dark .nav-link {
            color: #ffffff !important;
        }
        body.theme-dark .nav-link:hover,
        body.theme-dark .nav-link.active {
            background-color: #404040 !important;
            color: #ffffff !important;
        }
        body.theme-dark h1,
        body.theme-dark h2,
        body.theme-dark h3,
        body.theme-dark h4,
        body.theme-dark h5,
        body.theme-dark h6 {
            color: #ffffff !important;
        }
        body.theme-dark p,
        body.theme-dark span,
        body.theme-dark div {
            color: #ffffff !important;
        }
        body.theme-dark .form-label {
            color: #ffffff !important;
        }
        body.theme-dark .notification-group {
            color: #ffffff !important;
        }
        body.theme-dark .theme-option {
            background-color: #404040 !important;
            color: #ffffff !important;
            border-color: #555555 !important;
        }
        body.theme-dark .theme-option.active {
            background-color: #0d6efd !important;
            border-color: #0d6efd !important;
            color: #ffffff !important;
        }
        
        /* STYLES SPÉCIFIQUES POUR LE THÈME SOMBRE */
        
        body.theme-dark,
        body.theme-dark .main-content,
        body.theme-dark .settings-container,
        body.theme-dark .settings-content,
        body.theme-dark .content,
        body.theme-dark .container,
        body.theme-dark .container-fluid,
        body.theme-dark .row,
        body.theme-dark .col,
        body.theme-dark [class*="col-"] {
            background-color: #1a1a1a !important;
            color: #ffffff !important;
        }
        
        body.theme-dark .card,
        body.theme-dark .settings-sidebar,
        body.theme-dark .sidebar,
        body.theme-dark .header,
        body.theme-dark .notification-group,
        body.theme-dark .theme-options,
        body.theme-dark .appearance-section {
            background-color: #2d2d2d !important;
            color: #ffffff !important;
            border-color: #404040 !important;
        }
        
        body.theme-dark .theme-option {
            background-color: #f8f9fa !important;
            color: #212529 !important;
            border-color: #dee2e6 !important;
        }
        body.theme-dark .theme-option.active {
            background-color: #0d6efd !important;
            border-color: #0d6efd !important;
            color: #ffffff !important;
        }
        
        body.theme-dark h1,
        body.theme-dark h2,
        body.theme-dark h3,
        body.theme-dark h4,
        body.theme-dark h5,
        body.theme-dark h6,
        body.theme-dark p,
        body.theme-dark span,
        body.theme-dark div,
        body.theme-dark label,
        body.theme-dark .form-label,
        body.theme-dark .theme-label {
            color: #ffffff !important;
            background-color: transparent !important;
        }
        
        body.theme-dark .form-control,
        body.theme-dark .form-select,
        body.theme-dark input[type="text"],
        body.theme-dark input[type="email"],
        body.theme-dark input[type="password"],
        body.theme-dark input[type="search"],
        body.theme-dark textarea {
            background-color: #404040 !important;
            color: #ffffff !important;
            border-color: #555555 !important;
        }
        
        body.theme-dark input::placeholder,
        body.theme-dark textarea::placeholder {
            color: #cccccc !important;
        }
        
        body.theme-dark .btn {
            color: #ffffff !important;
        }
        body.theme-dark .btn-primary {
            background-color: #0d6efd !important;
            border-color: #0d6efd !important;
            color: #ffffff !important;
        }
        body.theme-dark .btn-secondary {
            background-color: #404040 !important;
            border-color: #555555 !important;
            color: #ffffff !important;
        }
        
        body.theme-dark .nav-link {
            color: #ffffff !important;
            background-color: transparent !important;
        }
        body.theme-dark .nav-link:hover,
        body.theme-dark .nav-link.active {
            background-color: #404040 !important;
            color: #ffffff !important;
        }
        
        body.theme-dark .toggle-switch {
            background-color: #404040 !important;
        }
        body.theme-dark .toggle-switch.active {
            background-color: #0d6efd !important;
        }
        
        /* Forcer tous les conteneurs blancs à être sombres */
        body.theme-dark [style*="background-color: white"],
        body.theme-dark [style*="background-color: #ffffff"],
        body.theme-dark [style*="background-color: #fff"],
        body.theme-dark [style*="background: white"],
        body.theme-dark [style*="background: #ffffff"],
        body.theme-dark [style*="background: #fff"] {
            background-color: #2d2d2d !important;
            color: #ffffff !important;
        }
        
        /* THÈME AUTO - suit les préférences système */
        @media (prefers-color-scheme: dark) {
            body.theme-auto {
                background-color: #1a1a1a !important;
                color: #ffffff !important;
            }
            body.theme-auto .card {
                background-color: #2d2d2d !important;
                color: #ffffff !important;
                border-color: #404040 !important;
            }
            body.theme-auto .sidebar {
                background-color: #2d2d2d !important;
                color: #ffffff !important;
                border-right-color: #404040 !important;
            }
            body.theme-auto .header {
                background-color: #2d2d2d !important;
                color: #ffffff !important;
                border-bottom-color: #404040 !important;
            }
            body.theme-auto .form-control,
            body.theme-auto .form-select {
                background-color: #404040 !important;
                color: #ffffff !important;
                border-color: #555555 !important;
            }
            body.theme-auto .nav-link {
                color: #ffffff !important;
            }
            body.theme-auto .nav-link:hover,
            body.theme-auto .nav-link.active {
                background-color: #404040 !important;
                color: #ffffff !important;
            }
            body.theme-auto h1,
            body.theme-auto h2,
            body.theme-auto h3,
            body.theme-auto h4,
            body.theme-auto h5,
            body.theme-auto h6 {
                color: #ffffff !important;
            }
            body.theme-auto p,
            body.theme-auto span,
            body.theme-auto div {
                color: #ffffff !important;
            }
            body.theme-auto .form-label {
                color: #ffffff !important;
            }
            body.theme-auto .notification-group {
                color: #ffffff !important;
            }
            body.theme-auto .theme-option {
                background-color: #f8f9fa !important;
                color: #212529 !important;
                border-color: #dee2e6 !important;
            }
            body.theme-auto .theme-option.active {
                background-color: #0d6efd !important;
                border-color: #0d6efd !important;
                color: #ffffff !important;
            }
            body.theme-auto .main-content {
                background-color: #1a1a1a !important;
                color: #ffffff !important;
            }
            body.theme-auto .settings-container {
                background-color: #1a1a1a !important;
                color: #ffffff !important;
            }
            body.theme-auto .settings-sidebar {
                background-color: #2d2d2d !important;
                color: #ffffff !important;
            }
            body.theme-auto .settings-content {
                background-color: #1a1a1a !important;
                color: #ffffff !important;
            }
            body.theme-auto .notification-group h3 {
                color: #ffffff !important;
            }
            body.theme-auto .theme-label {
                color: #ffffff !important;
            }
            body.theme-auto .btn {
                color: #ffffff !important;
            }
            body.theme-auto .btn-secondary {
                background-color: #404040 !important;
                border-color: #555555 !important;
                color: #ffffff !important;
            }
            body.theme-auto input[type="text"],
            body.theme-auto input[type="email"],
            body.theme-auto input[type="password"],
            body.theme-auto textarea {
                background-color: #404040 !important;
                color: #ffffff !important;
                border-color: #555555 !important;
            }
            body.theme-auto input[type="text"]::placeholder,
            body.theme-auto input[type="email"]::placeholder,
            body.theme-auto input[type="password"]::placeholder,
            body.theme-auto textarea::placeholder {
                color: #cccccc !important;
            }
            body.theme-auto .toggle-switch {
                background-color: #404040 !important;
            }
            body.theme-auto .toggle-switch.active {
                background-color: #0d6efd !important;
            }
        }
        
        /* Transitions */
        * {
            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        }
    </style>
    <script src="/public/emergency_js_fix.js"></script>
    
    <style>
        /* === DROPDOWNS ET ÉLÉMENTS SPÉCIFIQUES === */
        .user-box {
            position: relative;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .user-name {
            color: #333;
            font-weight: 500;
            font-size: 0.9rem;
        }
        .profile-dropdown {
            position: absolute;
            top: calc(100% + 10px);
            right: 0;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 16px rgba(30,40,90,0.1);
            border: 1px solid #f0f0f0;
            width: 200px;
            padding: 0.5rem 0;
            z-index: 1001;
            display: none; /* Caché par défaut */
        }
        .profile-dropdown.show {
            display: block;
        }
        .profile-dropdown-item {
            display: flex;
            align-items: center;
            gap: 0.8rem;
            padding: 0.7rem 1.2rem;
            color: #333;
            font-size: 1rem;
            text-decoration: none;
        }
        .profile-dropdown-item:hover {
            background-color: #f5f5f5;
        }
        .profile-dropdown-item i {
            font-size: 1.1rem;
            display: inline-block;
            width: 20px;
            text-align: center;
            opacity: 1 !important;
            visibility: visible !important;
        }
        .profile-dropdown-divider {
            height: 1px;
            background-color: #f0f0f0;
            margin: 0.5rem 0;
        }
        
        /* === DROPDOWN NOTIFICATIONS === */
        .notification-dropdown {
            position: absolute;
            top: calc(100% + 10px);
            right: 0;
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 8px 32px rgba(30,40,90,0.12);
            border: 1px solid #e5e7eb;
            width: 380px;
            max-height: 500px;
            z-index: 1001;
            display: none;
            overflow: hidden;
        }
        .notification-dropdown.show {
            display: block;
        }
        .notification-dropdown-header {
            padding: 1.2rem 1.5rem 1rem 1.5rem;
            border-bottom: 1px solid #f3f4f6;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .notification-dropdown-title {
            font-size: 1.1rem;
            font-weight: 700;
            color: #1f2937;
            margin: 0;
        }
        .notification-dropdown-count {
            background: #2563eb;
            color: #fff;
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
        }
        .notification-dropdown-body {
            max-height: 350px;
            overflow-y: auto;
            padding: 0;
        }
        .notification-dropdown-item {
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #f9fafb;
            transition: background-color 0.15s;
            cursor: pointer;
            text-decoration: none;
            color: inherit;
        }
        .notification-dropdown-item:last-child {
            border-bottom: none;
        }
        .notification-dropdown-item:hover {
            background-color: #f9fafb;
        }
        .notification-dropdown-item.unread {
            background-color: #f0f7ff;
            border-left: 3px solid #2563eb;
        }
        .notification-dropdown-icon {
            font-size: 1.25rem;
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
            margin-top: 0.1rem;
        }
        .notification-dropdown-icon.warning { background: #fef3c7; color: #f59e0b; }
        .notification-dropdown-icon.danger { background: #fee2e2; color: #dc2626; }
        .notification-dropdown-icon.success { background: #d1fae5; color: #16a34a; }
        .notification-dropdown-icon.info { background: #dbeafe; color: #2563eb; }
        .notification-dropdown-content {
            flex: 1;
            min-width: 0;
        }
        .notification-dropdown-content .title {
            font-weight: 600;
            font-size: 0.9rem;
            color: #1f2937;
            margin-bottom: 0.25rem;
            line-height: 1.3;
        }
        .notification-dropdown-content .description {
            font-size: 0.8rem;
            color: #6b7280;
            margin-bottom: 0.25rem;
            line-height: 1.3;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        .notification-dropdown-content .time {
            font-size: 0.75rem;
            color: #9ca3af;
        }
        .notification-dropdown-footer {
            padding: 0.75rem 1.5rem;
            border-top: 1px solid #f3f4f6;
            text-align: center;
        }
        .notification-dropdown-footer a {
            color: #2563eb;
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 600;
        }
        .notification-dropdown-footer a:hover {
            color: #1d4ed8;
        }
        .notification-empty {
            padding: 2rem 1.5rem;
            text-align: center;
            color: #6b7280;
        }
        .notification-empty i {
            font-size: 2.5rem;
            color: #d1d5db;
            margin-bottom: 0.5rem;
        }
        .notif-btn {
            position: relative;
        }
    </style>
    {% block stylesheets %}{% endblock %}
</head>
<body{% if user is defined %} data-can-access-permissions="{{ can_access_permissions ? 'true' : 'false' }}" data-is-admin="{{ user.is_admin is defined ? (user.is_admin ? 'true' : 'false') : 'false' }}" data-is-super-admin="{{ user.is_super_admin is defined ? (user.is_super_admin ? 'true' : 'false') : 'false' }}"{% endif %}>
    <!-- Sidebar -->
    <div class="sidebar">
        <div>
            <div class="logo-row mb-3">
                <i class='bx bxs-truck'></i>
                <h4 class="text-white mb-0">TerrainTrack</h4>
            </div>
            <nav class="mt-4">
                <a href="/dashboard" class="nav-link {% if '/dashboard' in app.request.uri %}active{% endif %}">
                    <i class='bx bxs-dashboard'></i>
                    <span>Dashboard</span>
                </a>
                <a href="/map-view" class="nav-link {% if '/map-view' in app.request.uri %}active{% endif %}">
                    <i class='bx bxs-map'></i>
                    <span>Map View</span>
                </a>
                <a href="/intervention/list" class="nav-link {% if '/intervention' in app.request.uri %}active{% endif %}">
                    <i class='bx bxs-wrench'></i>
                    <span>Interventions</span>
                </a>
                <a href="/vehicles" class="nav-link {% if '/vehicles' in app.request.uri %}active{% endif %}">
                    <i class='bx bxs-car'></i>
                    <span>Véhicules</span>
                </a>
                <a href="/teams" class="nav-link {% if '/teams' in app.request.uri %}active{% endif %}">
                    <i class='bx bxs-group'></i>
                    <span>Équipes</span>
                </a>
                <a href="/reports" class="nav-link {% if '/reports' in app.request.uri %}active{% endif %}">
                    <i class='bx bxs-file'></i>
                    <span>Rapports</span>
                </a>
                <a href="/notifications" class="nav-link {% if '/notifications' in app.request.uri %}active{% endif %}">
                    <i class='bx bxs-bell'></i>
                    <span>Notifications</span>
                </a>
                <a href="/settings" class="nav-link {% if '/settings' in app.request.uri %}active{% endif %}">
                    <i class='bx bxs-cog'></i>
                    <span>Paramètres</span>
                </a>
            </nav>
        </div>
    </div>

    <!-- Topbar -->
    <div class="topbar">
        <div class="d-flex align-items-center justify-content-between w-100">
            <div class="d-flex align-items-center gap-3">
                <h5 class="mb-0">{% block page_title %}{% endblock %}</h5>
                <div class="search-box">
                    <i class='bx bx-search'></i>
                    <input type="text" placeholder="Rechercher...">
                </div>
            </div>
            <div class="d-flex align-items-center gap-3">
                <button class="notif-btn">
                    <i class='bx bxs-bell'></i>
                    <span class="notif-badge" id="notifBadge">0</span>
                    
                    <!-- Dropdown des notifications -->
                    <div class="notification-dropdown" id="notificationDropdown">
                        <div class="notification-dropdown-header">
                            <h3 class="notification-dropdown-title">Notifications</h3>
                            <span class="notification-dropdown-count" id="notifCount">0</span>
                        </div>
                        <div class="notification-dropdown-body" id="notificationList">
                            <!-- Les notifications seront chargées ici via JavaScript -->
                            <div class="notification-empty">
                                <i class='bx bx-bell'></i>
                                <p>Chargement des notifications...</p>
                            </div>
                        </div>
                        <div class="notification-dropdown-footer">
                            <a href="/notifications">Voir toutes les notifications</a>
                        </div>
                    </div>
                </button>
                <div class="user-box">
                    {% if currentUser %}
                        {% if currentUser.avatar %}
                            <img src="{{ currentUser.avatar }}" alt="{{ currentUser.name }}" class="user-avatar">
                        {% else %}
                            <div class="user-avatar" style="width: 40px; height: 40px; border-radius: 50%; background: #2563eb; color: white; display: flex; align-items: center; justify-content: center; font-weight: 600; font-size: 16px;">{{ currentUser.initials|default('U') }}</div>
                        {% endif %}
                        <span class="user-name">{{ currentUser.name|default(currentUser.email) }}</span>
                    {% else %}
                        <div class="user-avatar" style="width: 40px; height: 40px; border-radius: 50%; background: #2563eb; color: white; display: flex; align-items: center; justify-content: center; font-weight: 600; font-size: 16px;">U</div>
                        <span class="user-name">Utilisateur</span>
                    {% endif %}
                    <div class="profile-dropdown">
                        <a href="/profile" class="profile-dropdown-item">
                            <i class='bx bx-user'></i>
                            <span>Profil</span>
                        </a>
                        <a href="/settings" class="profile-dropdown-item">
                            <i class='bx bx-cog'></i>
                            <span>Paramètres</span>
                        </a>
                        <a href="/help" class="profile-dropdown-item">
                            <i class='bx bx-help-circle'></i>
                            <span>Aide</span>
                        </a>
                        <div class="profile-dropdown-divider"></div>
                        <a href="/auth/logout" class="profile-dropdown-item" style="color: #dc3545;">
                            <i class='bx bx-log-out'></i>
                            <span>Déconnexion</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="content-wrapper">
            {% block content %}{% endblock %}
        </div>
    </div>

    <!-- JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const userBox = document.querySelector('.user-box');
            const dropdown = document.querySelector('.profile-dropdown');

            if (userBox && dropdown) {
                userBox.addEventListener('click', function(event) {
                    dropdown.classList.toggle('show');
                    event.stopPropagation();
                });

                document.addEventListener('click', function(event) {
                    if (!userBox.contains(event.target)) {
                        dropdown.classList.remove('show');
                    }
                });
            }

            // Vérifier que les icônes s'affichent correctement
            setTimeout(function() {
                const icons = document.querySelectorAll('.profile-dropdown-item i');
                icons.forEach(function(icon) {
                    if (!icon.offsetWidth || !icon.offsetHeight) {
                        console.warn('Icône non visible détectée, mais rechargement désactivé pour préserver les filtres');
                        // window.location.reload(); // Désactivé pour éviter la perte des filtres
                    }
                });
            }, 2000);
            
            // === GESTION DYNAMIQUE DES NOTIFICATIONS ===
            const notifBadge = document.getElementById('notifBadge');
            const notifCount = document.getElementById('notifCount');
            const notifBtn = document.querySelector('.notif-btn');
            const notificationDropdown = document.getElementById('notificationDropdown');
            const notificationList = document.getElementById('notificationList');
            
            // Charger les notifications au démarrage
            loadNotifications();
            
            // Rafraîchissement automatique des notifications désactivé pour préserver les filtres
            // setInterval(loadNotifications, 30000);
            
            // === GESTION AUTOMATIQUE DE LA SESSION ===
            let sessionTimeout;
            let sessionWarningTimeout;
            const SESSION_TIMEOUT = 30 * 60 * 1000; // 30 minutes en millisecondes
            const SESSION_WARNING_TIME = 5 * 60 * 1000; // 5 minutes avant expiration
            
            function resetSessionTimer() {
                // Effacer les timeouts existants
                clearTimeout(sessionTimeout);
                clearTimeout(sessionWarningTimeout);
                
                // Programmer l'avertissement 5 minutes avant expiration
                sessionWarningTimeout = setTimeout(function() {
                    showSessionWarning();
                }, SESSION_TIMEOUT - SESSION_WARNING_TIME);
                
                // Programmer la déconnexion automatique
                sessionTimeout = setTimeout(function() {
                    logoutUser();
                }, SESSION_TIMEOUT);
            }
            
            function showSessionWarning() {
                const warningDiv = document.createElement('div');
                warningDiv.style.cssText = `
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    background: #f59e0b;
                    color: white;
                    padding: 1rem 1.5rem;
                    border-radius: 8px;
                    z-index: 9999;
                    box-shadow: 0 4px 16px rgba(0,0,0,0.1);
                    font-weight: 500;
                `;
                warningDiv.innerHTML = `
                    <i class='bx bx-time' style='margin-right: 0.5rem;'></i>
                    Votre session expirera dans 5 minutes. Effectuez une action pour rester connecté.
                `;
                document.body.appendChild(warningDiv);
                
                // Supprimer l'avertissement après 10 secondes
                setTimeout(() => {
                    if (warningDiv.parentNode) {
                        warningDiv.parentNode.removeChild(warningDiv);
                    }
                }, 10000);
            }
            
            function logoutUser() {
                // Afficher un message de déconnexion
                const logoutDiv = document.createElement('div');
                logoutDiv.style.cssText = `
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgba(0,0,0,0.8);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    z-index: 99999;
                    color: white;
                    font-size: 1.2rem;
                    text-align: center;
                `;
                logoutDiv.innerHTML = `
                    <div style='background: #1a2340; padding: 2rem; border-radius: 12px; box-shadow: 0 8px 32px rgba(0,0,0,0.3);'>
                        <i class='bx bx-time' style='font-size: 3rem; margin-bottom: 1rem; color: #f59e0b;'></i>
                        <h3 style='margin: 0 0 1rem 0;'>Session expirée</h3>
                        <p style='margin: 0 0 1.5rem 0; color: #9ca3af;'>Vous allez être redirigé vers la page de connexion...</p>
                        <div style='display: flex; align-items: center; justify-content: center; gap: 0.5rem;'>
                            <div style='width: 20px; height: 20px; border: 2px solid #f59e0b; border-top: 2px solid transparent; border-radius: 50%; animation: spin 1s linear infinite;'></div>
                            <span>Redirection...</span>
                        </div>
                    </div>
                `;
                document.body.appendChild(logoutDiv);
                
                // Rediriger vers la page de login après 3 secondes
                setTimeout(() => {
                    window.location.href = '/login?timeout=1';
                }, 3000);
            }
            
            // Écouter les événements d'activité utilisateur
            const activityEvents = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click'];
            
            activityEvents.forEach(event => {
                document.addEventListener(event, function() {
                    resetSessionTimer();
                }, true);
            });
            
            // Démarrer le timer au chargement de la page
            resetSessionTimer();
            
            // Gestion du clic sur le bouton notifications
            if (notifBtn && notificationDropdown) {
                notifBtn.addEventListener('click', function(event) {
                    event.stopPropagation();
                    notificationDropdown.classList.toggle('show');
                    
                    if (notificationDropdown.classList.contains('show')) {
                        loadNotifications();
                    }
                });
                
                // Fermer en cliquant ailleurs
                document.addEventListener('click', function(event) {
                    if (!notifBtn.contains(event.target)) {
                        notificationDropdown.classList.remove('show');
                    }
                });
            }
            
            // Fonction pour charger les notifications
            function loadNotifications() {
                fetch('/api/notifications')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            updateNotificationBadge(data.unreadCount);
                            updateNotificationDropdown(data.notifications);
                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors du chargement des notifications:', error);
                    });
            }
            
            // Fonction pour mettre à jour le badge
            function updateNotificationBadge(count) {
                if (notifBadge) {
                    notifBadge.textContent = count;
                    notifBadge.style.display = count > 0 ? 'flex' : 'none';
                }
                if (notifCount) {
                    notifCount.textContent = count;
                }
            }
            
            // Fonction pour mettre à jour le dropdown
            function updateNotificationDropdown(notifications) {
                if (!notificationList) return;
                
                if (notifications.length === 0) {
                    notificationList.innerHTML = `
                        <div class="notification-empty">
                            <i class='bx bx-bell'></i>
                            <p>Aucune notification</p>
                        </div>
                    `;
                    return;
                }
                
                let html = '';
                notifications.forEach(notification => {
                    const iconClass = getNotificationIconClass(notification.type_class);
                    const isUnread = notification.is_read === 0;
                    
                    html += `
                        <div class="notification-dropdown-item ${isUnread ? 'unread' : ''}" data-id="${notification.id}">
                            <div class="notification-dropdown-icon ${notification.type_class}">
                                <i class="${notification.icon}"></i>
                            </div>
                            <div class="notification-dropdown-content">
                                <div class="title">${escapeHtml(notification.title)}</div>
                                <div class="description">${escapeHtml(notification.description)}</div>
                                <div class="time">${notification.formatted_date}</div>
                            </div>
                        </div>
                    `;
                });
                
                notificationList.innerHTML = html;
                
                // Ajouter les event listeners pour marquer comme lu
                document.querySelectorAll('.notification-dropdown-item').forEach(item => {
                    item.addEventListener('click', function() {
                        const notificationId = this.dataset.id;
                        markAsRead(notificationId);
                    });
                });
            }
            
            // Fonction pour obtenir la classe d'icône
            function getNotificationIconClass(typeClass) {
                switch(typeClass) {
                    case 'warning': return 'warning';
                    case 'danger': return 'danger';
                    case 'success': return 'success';
                    case 'info':
                    default: return 'info';
                }
            }
            
            // Fonction pour échapper le HTML
            function escapeHtml(text) {
                const div = document.createElement('div');
                div.textContent = text;
                return div.innerHTML;
            }
            
            // Fonction pour marquer une notification comme lue
            function markAsRead(notificationId) {
                fetch('/api/notifications/mark-read', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ id: notificationId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log('Notification marquée comme lue');
                        // Recharger les notifications pour mettre à jour le badge
                        loadNotifications();
                    } else {
                        console.error('Erreur lors du marquage comme lu:', data.message);
                    }
                })
                .catch(error => {
                    console.error('Erreur lors du marquage comme lu:', error);
                });
            }
        });
    </script>
    <style>
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
    {% block extra_js %}{% endblock %}
    {% block extra_scripts %}{% endblock %}
</body>
</html> 